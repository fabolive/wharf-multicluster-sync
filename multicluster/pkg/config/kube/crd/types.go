// Code generated by pilot/tools/generate_config_crd_types.go. DO NOT EDIT!

package crd

// This file contains Go definitions for Custom Resource Definition kinds
// to adhere to the idiomatic use of k8s API machinery.
// These definitions are synthesized from Istio configuration type descriptors
// as declared in the Pilot config model.

import (
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"

	mcmodel "github.ibm.com/istio-research/multicluster-roadmap/multicluster/pkg/model"
	"istio.io/istio/pilot/pkg/model"
)

type schemaType struct {
	schema     model.ProtoSchema
	object     IstioObject
	collection IstioObjectList
}

var knownTypes = map[string]schemaType{
	mcmodel.ServiceExpositionPolicy.Type: {
		schema: mcmodel.ServiceExpositionPolicy,
		object: &ServiceExpositionPolicy{
			TypeMeta: meta_v1.TypeMeta{
				Kind:       "ServiceExpositionPolicy",
				APIVersion: apiVersion(&mcmodel.ServiceExpositionPolicy),
			},
		},
		collection: &ServiceExpositionPolicyList{},
	},
}

// ServiceExpositionPolicy is the generic Kubernetes API object wrapper
type ServiceExpositionPolicy struct {
	meta_v1.TypeMeta   `json:",inline"`
	meta_v1.ObjectMeta `json:"metadata"`
	Spec               map[string]interface{} `json:"spec"`
}

// GetSpec from a wrapper
func (in *ServiceExpositionPolicy) GetSpec() map[string]interface{} {
	return in.Spec
}

// SetSpec for a wrapper
func (in *ServiceExpositionPolicy) SetSpec(spec map[string]interface{}) {
	in.Spec = spec
}

// GetObjectMeta from a wrapper
func (in *ServiceExpositionPolicy) GetObjectMeta() meta_v1.ObjectMeta {
	return in.ObjectMeta
}

// SetObjectMeta for a wrapper
func (in *ServiceExpositionPolicy) SetObjectMeta(metadata meta_v1.ObjectMeta) {
	in.ObjectMeta = metadata
}

// ServiceExpositionPolicyList is the generic Kubernetes API list wrapper
type ServiceExpositionPolicyList struct {
	meta_v1.TypeMeta `json:",inline"`
	meta_v1.ListMeta `json:"metadata"`
	Items            []ServiceExpositionPolicy `json:"items"`
}

// GetItems from a wrapper
func (in *ServiceExpositionPolicyList) GetItems() []IstioObject {
	out := make([]IstioObject, len(in.Items))
	for i := range in.Items {
		out[i] = &in.Items[i]
	}
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceExpositionPolicy) DeepCopyInto(out *ServiceExpositionPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceExpositionPolicy.
func (in *ServiceExpositionPolicy) DeepCopy() *ServiceExpositionPolicy {
	if in == nil {
		return nil
	}
	out := new(ServiceExpositionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceExpositionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}

	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceExpositionPolicyList) DeepCopyInto(out *ServiceExpositionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceExpositionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceExpositionPolicyList.
func (in *ServiceExpositionPolicyList) DeepCopy() *ServiceExpositionPolicyList {
	if in == nil {
		return nil
	}
	out := new(ServiceExpositionPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceExpositionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}

	return nil
}
